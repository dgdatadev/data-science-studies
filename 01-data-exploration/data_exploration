{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"mount_file_id":"1MLAjzQcBWxDiTXqdF5JAJwAM1wQQeZKs","authorship_tag":"ABX9TyOgWSB8a23BIY++0GYAStzU"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"IGrOMgNeJWMv","executionInfo":{"status":"ok","timestamp":1752181644516,"user_tz":180,"elapsed":418,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}}},"outputs":[],"source":["import pandas as pd\n","import datetime as dt"]},{"cell_type":"code","source":["base = pd.read_csv('/content/drive/MyDrive/Google Colab Notebooks/Data Exploration/netflix-daily-top-10.csv')"],"metadata":{"id":"yoXoEcv6KiHa","executionInfo":{"status":"ok","timestamp":1752181660662,"user_tz":180,"elapsed":423,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}}},"execution_count":2,"outputs":[]},{"cell_type":"code","source":["base.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"AM6P-1qiKiMt","executionInfo":{"status":"ok","timestamp":1752181675500,"user_tz":180,"elapsed":138,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"57ed29f6-de8e-4a05-e7cf-660c352067a7"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["        As of  Rank Year to Date Rank Last Week Rank  \\\n","0  2020-04-01     1                 1              1   \n","1  2020-04-01     2                 2              -   \n","2  2020-04-01     3                 3              2   \n","3  2020-04-01     4                 4              -   \n","4  2020-04-01     5                 5              4   \n","\n","                          Title     Type Netflix Exclusive  \\\n","0  Tiger King: Murder, Mayhem …  TV Show               Yes   \n","1                         Ozark  TV Show               Yes   \n","2                  All American  TV Show               NaN   \n","3                  Blood Father    Movie               NaN   \n","4                  The Platform    Movie               Yes   \n","\n","  Netflix Release Date  Days In Top 10  Viewership Score  \n","0         Mar 20, 2020               9                90  \n","1         Jul 21, 2017               5                45  \n","2         Mar 28, 2019               9                76  \n","3         Mar 26, 2020               5                30  \n","4         Mar 20, 2020               9                55  "],"text/html":["\n","  <div id=\"df-52032892-44c9-466f-9e9b-a6d6652db6dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>As of</th>\n","      <th>Rank</th>\n","      <th>Year to Date Rank</th>\n","      <th>Last Week Rank</th>\n","      <th>Title</th>\n","      <th>Type</th>\n","      <th>Netflix Exclusive</th>\n","      <th>Netflix Release Date</th>\n","      <th>Days In Top 10</th>\n","      <th>Viewership Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-01</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Tiger King: Murder, Mayhem …</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Mar 20, 2020</td>\n","      <td>9</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-01</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>-</td>\n","      <td>Ozark</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Jul 21, 2017</td>\n","      <td>5</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-01</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>All American</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Mar 28, 2019</td>\n","      <td>9</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-01</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>-</td>\n","      <td>Blood Father</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>Mar 26, 2020</td>\n","      <td>5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-01</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>The Platform</td>\n","      <td>Movie</td>\n","      <td>Yes</td>\n","      <td>Mar 20, 2020</td>\n","      <td>9</td>\n","      <td>55</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-52032892-44c9-466f-9e9b-a6d6652db6dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-52032892-44c9-466f-9e9b-a6d6652db6dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-52032892-44c9-466f-9e9b-a6d6652db6dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-3e39251f-88e4-47bd-95a3-cc12a7cca7eb\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-3e39251f-88e4-47bd-95a3-cc12a7cca7eb')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-3e39251f-88e4-47bd-95a3-cc12a7cca7eb button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"base","summary":"{\n  \"name\": \"base\",\n  \"rows\": 7100,\n  \"fields\": [\n    {\n      \"column\": \"As of\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 710,\n        \"samples\": [\n          \"2021-01-20\",\n          \"2020-12-13\",\n          \"2022-03-04\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year to Date Rank\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"6\",\n          \"1\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last Week Rank\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"3\",\n          \"1\",\n          \"7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 645,\n        \"samples\": [\n          \"The Cuphead Show\",\n          \"Death to 2021\",\n          \"Dark Shadows\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Movie\",\n          \"Concert/Perf\\u2026\",\n          \"TV Show\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Netflix Exclusive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Netflix Release Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 414,\n        \"samples\": [\n          \"Nov 6, 2021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Days In Top 10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58,\n        \"min\": 1,\n        \"max\": 428,\n        \"num_unique_values\": 428,\n        \"samples\": [\n          421\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Viewership Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 213,\n        \"min\": 1,\n        \"max\": 1474,\n        \"num_unique_values\": 779,\n        \"samples\": [\n          539\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["base.tail()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"CQnSKBCcKiPL","executionInfo":{"status":"ok","timestamp":1752181683670,"user_tz":180,"elapsed":62,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"16a2dcdc-6043-4507-d725-2e4608dd0bc4"},"execution_count":5,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           As of  Rank Year to Date Rank Last Week Rank                Title  \\\n","7095  2022-03-11     6                 5              1  Worst Roommate Ever   \n","7096  2022-03-11     7                 7              2    Vikings: Valhalla   \n","7097  2022-03-11     8                 8              -              Shooter   \n","7098  2022-03-11     9                 9              7              Shrek 2   \n","7099  2022-03-11    10                10              -                Shrek   \n","\n","         Type Netflix Exclusive Netflix Release Date  Days In Top 10  \\\n","7095  TV Show               Yes          Mar 1, 2022              10   \n","7096  TV Show               Yes         Feb 25, 2022              14   \n","7097    Movie               NaN          Aug 1, 2014               3   \n","7098    Movie               NaN          Mar 1, 2022              10   \n","7099    Movie               NaN          May 1, 2018               7   \n","\n","      Viewership Score  \n","7095                81  \n","7096               100  \n","7097                 7  \n","7098                33  \n","7099                12  "],"text/html":["\n","  <div id=\"df-12139d57-4051-46c4-b9f9-ac5b8a83a8ba\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>As of</th>\n","      <th>Rank</th>\n","      <th>Year to Date Rank</th>\n","      <th>Last Week Rank</th>\n","      <th>Title</th>\n","      <th>Type</th>\n","      <th>Netflix Exclusive</th>\n","      <th>Netflix Release Date</th>\n","      <th>Days In Top 10</th>\n","      <th>Viewership Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>7095</th>\n","      <td>2022-03-11</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>Worst Roommate Ever</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Mar 1, 2022</td>\n","      <td>10</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>7096</th>\n","      <td>2022-03-11</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>Vikings: Valhalla</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Feb 25, 2022</td>\n","      <td>14</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>7097</th>\n","      <td>2022-03-11</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>-</td>\n","      <td>Shooter</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>Aug 1, 2014</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>7098</th>\n","      <td>2022-03-11</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>Shrek 2</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>Mar 1, 2022</td>\n","      <td>10</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>7099</th>\n","      <td>2022-03-11</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>-</td>\n","      <td>Shrek</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>May 1, 2018</td>\n","      <td>7</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-12139d57-4051-46c4-b9f9-ac5b8a83a8ba')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-12139d57-4051-46c4-b9f9-ac5b8a83a8ba button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-12139d57-4051-46c4-b9f9-ac5b8a83a8ba');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-da3674b5-26c5-477d-aa4e-36a4ccad2a8f\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-da3674b5-26c5-477d-aa4e-36a4ccad2a8f')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-da3674b5-26c5-477d-aa4e-36a4ccad2a8f button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":5}]},{"cell_type":"code","source":["base.shape"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"fh8OzRRvKiRP","executionInfo":{"status":"ok","timestamp":1752181713633,"user_tz":180,"elapsed":14,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"d0dfa4a7-3033-4344-8493-b933065487ba"},"execution_count":6,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(7100, 10)"]},"metadata":{},"execution_count":6}]},{"cell_type":"code","source":["display(base)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"8av8XD6-KiTP","executionInfo":{"status":"ok","timestamp":1752181775245,"user_tz":180,"elapsed":138,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"ea379e01-7334-4d97-b781-bce8659a821c"},"execution_count":7,"outputs":[{"output_type":"display_data","data":{"text/plain":["           As of  Rank Year to Date Rank Last Week Rank  \\\n","0     2020-04-01     1                 1              1   \n","1     2020-04-01     2                 2              -   \n","2     2020-04-01     3                 3              2   \n","3     2020-04-01     4                 4              -   \n","4     2020-04-01     5                 5              4   \n","...          ...   ...               ...            ...   \n","7095  2022-03-11     6                 5              1   \n","7096  2022-03-11     7                 7              2   \n","7097  2022-03-11     8                 8              -   \n","7098  2022-03-11     9                 9              7   \n","7099  2022-03-11    10                10              -   \n","\n","                             Title     Type Netflix Exclusive  \\\n","0     Tiger King: Murder, Mayhem …  TV Show               Yes   \n","1                            Ozark  TV Show               Yes   \n","2                     All American  TV Show               NaN   \n","3                     Blood Father    Movie               NaN   \n","4                     The Platform    Movie               Yes   \n","...                            ...      ...               ...   \n","7095           Worst Roommate Ever  TV Show               Yes   \n","7096             Vikings: Valhalla  TV Show               Yes   \n","7097                       Shooter    Movie               NaN   \n","7098                       Shrek 2    Movie               NaN   \n","7099                         Shrek    Movie               NaN   \n","\n","     Netflix Release Date  Days In Top 10  Viewership Score  \n","0            Mar 20, 2020               9                90  \n","1            Jul 21, 2017               5                45  \n","2            Mar 28, 2019               9                76  \n","3            Mar 26, 2020               5                30  \n","4            Mar 20, 2020               9                55  \n","...                   ...             ...               ...  \n","7095          Mar 1, 2022              10                81  \n","7096         Feb 25, 2022              14               100  \n","7097          Aug 1, 2014               3                 7  \n","7098          Mar 1, 2022              10                33  \n","7099          May 1, 2018               7                12  \n","\n","[7100 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-019923ca-576f-436c-8907-7b03cfaf1f90\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>As of</th>\n","      <th>Rank</th>\n","      <th>Year to Date Rank</th>\n","      <th>Last Week Rank</th>\n","      <th>Title</th>\n","      <th>Type</th>\n","      <th>Netflix Exclusive</th>\n","      <th>Netflix Release Date</th>\n","      <th>Days In Top 10</th>\n","      <th>Viewership Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2020-04-01</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Tiger King: Murder, Mayhem …</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Mar 20, 2020</td>\n","      <td>9</td>\n","      <td>90</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2020-04-01</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>-</td>\n","      <td>Ozark</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Jul 21, 2017</td>\n","      <td>5</td>\n","      <td>45</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2020-04-01</td>\n","      <td>3</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>All American</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Mar 28, 2019</td>\n","      <td>9</td>\n","      <td>76</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2020-04-01</td>\n","      <td>4</td>\n","      <td>4</td>\n","      <td>-</td>\n","      <td>Blood Father</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>Mar 26, 2020</td>\n","      <td>5</td>\n","      <td>30</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2020-04-01</td>\n","      <td>5</td>\n","      <td>5</td>\n","      <td>4</td>\n","      <td>The Platform</td>\n","      <td>Movie</td>\n","      <td>Yes</td>\n","      <td>Mar 20, 2020</td>\n","      <td>9</td>\n","      <td>55</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>7095</th>\n","      <td>2022-03-11</td>\n","      <td>6</td>\n","      <td>5</td>\n","      <td>1</td>\n","      <td>Worst Roommate Ever</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Mar 1, 2022</td>\n","      <td>10</td>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>7096</th>\n","      <td>2022-03-11</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>Vikings: Valhalla</td>\n","      <td>TV Show</td>\n","      <td>Yes</td>\n","      <td>Feb 25, 2022</td>\n","      <td>14</td>\n","      <td>100</td>\n","    </tr>\n","    <tr>\n","      <th>7097</th>\n","      <td>2022-03-11</td>\n","      <td>8</td>\n","      <td>8</td>\n","      <td>-</td>\n","      <td>Shooter</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>Aug 1, 2014</td>\n","      <td>3</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>7098</th>\n","      <td>2022-03-11</td>\n","      <td>9</td>\n","      <td>9</td>\n","      <td>7</td>\n","      <td>Shrek 2</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>Mar 1, 2022</td>\n","      <td>10</td>\n","      <td>33</td>\n","    </tr>\n","    <tr>\n","      <th>7099</th>\n","      <td>2022-03-11</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>-</td>\n","      <td>Shrek</td>\n","      <td>Movie</td>\n","      <td>NaN</td>\n","      <td>May 1, 2018</td>\n","      <td>7</td>\n","      <td>12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>7100 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-019923ca-576f-436c-8907-7b03cfaf1f90')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-019923ca-576f-436c-8907-7b03cfaf1f90 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-019923ca-576f-436c-8907-7b03cfaf1f90');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-a97c852e-5579-48c6-be4c-006e12848327\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a97c852e-5579-48c6-be4c-006e12848327')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-a97c852e-5579-48c6-be4c-006e12848327 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","  <div id=\"id_eba3a1a9-a14e-4118-aa59-f2be5c0a887b\">\n","    <style>\n","      .colab-df-generate {\n","        background-color: #E8F0FE;\n","        border: none;\n","        border-radius: 50%;\n","        cursor: pointer;\n","        display: none;\n","        fill: #1967D2;\n","        height: 32px;\n","        padding: 0 0 0 0;\n","        width: 32px;\n","      }\n","\n","      .colab-df-generate:hover {\n","        background-color: #E2EBFA;\n","        box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","        fill: #174EA6;\n","      }\n","\n","      [theme=dark] .colab-df-generate {\n","        background-color: #3B4455;\n","        fill: #D2E3FC;\n","      }\n","\n","      [theme=dark] .colab-df-generate:hover {\n","        background-color: #434B5C;\n","        box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","        filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","        fill: #FFFFFF;\n","      }\n","    </style>\n","    <button class=\"colab-df-generate\" onclick=\"generateWithVariable('base')\"\n","            title=\"Generate code using this dataframe.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M7,19H8.4L18.45,9,17,7.55,7,17.6ZM5,21V16.75L18.45,3.32a2,2,0,0,1,2.83,0l1.4,1.43a1.91,1.91,0,0,1,.58,1.4,1.91,1.91,0,0,1-.58,1.4L9.25,21ZM18.45,9,17,7.55Zm-12,3A5.31,5.31,0,0,0,4.9,8.1,5.31,5.31,0,0,0,1,6.5,5.31,5.31,0,0,0,4.9,4.9,5.31,5.31,0,0,0,6.5,1,5.31,5.31,0,0,0,8.1,4.9,5.31,5.31,0,0,0,12,6.5,5.46,5.46,0,0,0,6.5,12Z\"/>\n","  </svg>\n","    </button>\n","    <script>\n","      (() => {\n","      const buttonEl =\n","        document.querySelector('#id_eba3a1a9-a14e-4118-aa59-f2be5c0a887b button.colab-df-generate');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      buttonEl.onclick = () => {\n","        google.colab.notebook.generateWithVariable('base');\n","      }\n","      })();\n","    </script>\n","  </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","variable_name":"base","summary":"{\n  \"name\": \"base\",\n  \"rows\": 7100,\n  \"fields\": [\n    {\n      \"column\": \"As of\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 710,\n        \"samples\": [\n          \"2021-01-20\",\n          \"2020-12-13\",\n          \"2022-03-04\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 1,\n        \"max\": 10,\n        \"num_unique_values\": 10,\n        \"samples\": [\n          9,\n          2,\n          6\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Year to Date Rank\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"6\",\n          \"1\",\n          \"9\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Last Week Rank\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 11,\n        \"samples\": [\n          \"3\",\n          \"1\",\n          \"7\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Title\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 645,\n        \"samples\": [\n          \"The Cuphead Show\",\n          \"Death to 2021\",\n          \"Dark Shadows\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Type\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 4,\n        \"samples\": [\n          \"Movie\",\n          \"Concert/Perf\\u2026\",\n          \"TV Show\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Netflix Exclusive\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 1,\n        \"samples\": [\n          \"Yes\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Netflix Release Date\",\n      \"properties\": {\n        \"dtype\": \"object\",\n        \"num_unique_values\": 414,\n        \"samples\": [\n          \"Nov 6, 2021\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Days In Top 10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 58,\n        \"min\": 1,\n        \"max\": 428,\n        \"num_unique_values\": 428,\n        \"samples\": [\n          421\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Viewership Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 213,\n        \"min\": 1,\n        \"max\": 1474,\n        \"num_unique_values\": 779,\n        \"samples\": [\n          539\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{}}]},{"cell_type":"code","source":["inicio = pd.to_datetime(base['As of']).dt.date.min()\n","print(inicio)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"ddSOA4gzKiV9","executionInfo":{"status":"ok","timestamp":1752181915665,"user_tz":180,"elapsed":13,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"f99ef4e2-13f6-4852-ee64-6aa910f163ff"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stdout","text":["2020-04-01\n"]}]},{"cell_type":"code","source":["fim = pd.to_datetime(base['As of']).dt.date.max()\n","print(fim)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"CVu3rWNZKiYR","executionInfo":{"status":"ok","timestamp":1752181916966,"user_tz":180,"elapsed":10,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"e5ab36e5-c263-494b-e42c-01ca1776140e"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stdout","text":["2022-03-11\n"]}]},{"cell_type":"code","source":["base.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"efsSl4-zKiaN","executionInfo":{"status":"ok","timestamp":1752181948162,"user_tz":180,"elapsed":26,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"2833fa46-b2e2-449d-e734-e4e6cc6d1724"},"execution_count":10,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 7100 entries, 0 to 7099\n","Data columns (total 10 columns):\n"," #   Column                Non-Null Count  Dtype \n","---  ------                --------------  ----- \n"," 0   As of                 7100 non-null   object\n"," 1   Rank                  7100 non-null   int64 \n"," 2   Year to Date Rank     7100 non-null   object\n"," 3   Last Week Rank        7100 non-null   object\n"," 4   Title                 7100 non-null   object\n"," 5   Type                  7100 non-null   object\n"," 6   Netflix Exclusive     4599 non-null   object\n"," 7   Netflix Release Date  7100 non-null   object\n"," 8   Days In Top 10        7100 non-null   int64 \n"," 9   Viewership Score      7100 non-null   int64 \n","dtypes: int64(3), object(7)\n","memory usage: 554.8+ KB\n"]}]},{"cell_type":"code","source":["base.dtypes"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"id":"xcgx835ML077","executionInfo":{"status":"ok","timestamp":1752181997114,"user_tz":180,"elapsed":19,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"fff15945-3fa5-44ea-8a1f-fa7c311f2a77"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["As of                   object\n","Rank                     int64\n","Year to Date Rank       object\n","Last Week Rank          object\n","Title                   object\n","Type                    object\n","Netflix Exclusive       object\n","Netflix Release Date    object\n","Days In Top 10           int64\n","Viewership Score         int64\n","dtype: object"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>As of</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Rank</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Year to Date Rank</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Last Week Rank</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Netflix Exclusive</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Netflix Release Date</th>\n","      <td>object</td>\n","    </tr>\n","    <tr>\n","      <th>Days In Top 10</th>\n","      <td>int64</td>\n","    </tr>\n","    <tr>\n","      <th>Viewership Score</th>\n","      <td>int64</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> object</label>"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["base.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":398},"id":"WSBIWLKSL098","executionInfo":{"status":"ok","timestamp":1752182007651,"user_tz":180,"elapsed":28,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"65dee363-4dec-4e4d-957e-1fb83fd55d71"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["As of                      0\n","Rank                       0\n","Year to Date Rank          0\n","Last Week Rank             0\n","Title                      0\n","Type                       0\n","Netflix Exclusive       2501\n","Netflix Release Date       0\n","Days In Top 10             0\n","Viewership Score           0\n","dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>0</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>As of</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Rank</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Year to Date Rank</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Last Week Rank</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Type</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Netflix Exclusive</th>\n","      <td>2501</td>\n","    </tr>\n","    <tr>\n","      <th>Netflix Release Date</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Days In Top 10</th>\n","      <td>0</td>\n","    </tr>\n","    <tr>\n","      <th>Viewership Score</th>\n","      <td>0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["base['Netflix Exclusive'].value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":147},"id":"WNbVqV6kL1CW","executionInfo":{"status":"ok","timestamp":1752182054824,"user_tz":180,"elapsed":34,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"1abb157c-78ca-4125-9fc0-a052b3663476"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Netflix Exclusive\n","Yes    4599\n","Name: count, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Netflix Exclusive</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Yes</th>\n","      <td>4599</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["base.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"YbJMEkIOL1G7","executionInfo":{"status":"ok","timestamp":1752182120762,"user_tz":180,"elapsed":75,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"17a2e6d5-0f66-4d67-c3c4-cceafa5cbde0"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["              Rank  Days In Top 10  Viewership Score\n","count  7100.000000     7100.000000       7100.000000\n","mean      5.500000       24.123662        122.790141\n","std       2.872484       58.473789        213.861642\n","min       1.000000        1.000000          1.000000\n","25%       3.000000        3.000000         19.000000\n","50%       5.500000        7.000000         50.000000\n","75%       8.000000       18.000000        128.000000\n","max      10.000000      428.000000       1474.000000"],"text/html":["\n","  <div id=\"df-c6a7a272-18e7-4cda-b287-e3c04055bfdd\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Rank</th>\n","      <th>Days In Top 10</th>\n","      <th>Viewership Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>7100.000000</td>\n","      <td>7100.000000</td>\n","      <td>7100.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>5.500000</td>\n","      <td>24.123662</td>\n","      <td>122.790141</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>2.872484</td>\n","      <td>58.473789</td>\n","      <td>213.861642</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","      <td>1.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>3.000000</td>\n","      <td>3.000000</td>\n","      <td>19.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.500000</td>\n","      <td>7.000000</td>\n","      <td>50.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>8.000000</td>\n","      <td>18.000000</td>\n","      <td>128.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>10.000000</td>\n","      <td>428.000000</td>\n","      <td>1474.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c6a7a272-18e7-4cda-b287-e3c04055bfdd')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c6a7a272-18e7-4cda-b287-e3c04055bfdd button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c6a7a272-18e7-4cda-b287-e3c04055bfdd');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-40bb0ff8-41ee-43c9-94b2-7f2babd89b19\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-40bb0ff8-41ee-43c9-94b2-7f2babd89b19')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-40bb0ff8-41ee-43c9-94b2-7f2babd89b19 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","summary":"{\n  \"name\": \"base\",\n  \"rows\": 8,\n  \"fields\": [\n    {\n      \"column\": \"Rank\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2508.418916892105,\n        \"min\": 1.0,\n        \"max\": 7100.0,\n        \"num_unique_values\": 7,\n        \"samples\": [\n          7100.0,\n          5.5,\n          8.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Days In Top 10\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2487.1709971372347,\n        \"min\": 1.0,\n        \"max\": 7100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          24.123661971830987,\n          7.0,\n          7100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Viewership Score\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2457.9839025879387,\n        \"min\": 1.0,\n        \"max\": 7100.0,\n        \"num_unique_values\": 8,\n        \"samples\": [\n          122.79014084507043,\n          50.0,\n          7100.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"}},"metadata":{},"execution_count":15}]},{"cell_type":"code","source":["base.plot(kind='box',subplots=True);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"Sv8ErxUhMxEj","executionInfo":{"status":"ok","timestamp":1752182280925,"user_tz":180,"elapsed":614,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"fddd5e22-f072-464f-8a3e-1cd7b7db8447"},"execution_count":17,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 3 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["base[base['Days In Top 10'] >= 100]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"km5C-y5EL1L7","executionInfo":{"status":"ok","timestamp":1752182370803,"user_tz":180,"elapsed":57,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"256eaa62-9d1b-4328-eb73-c406f2d769e5"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           As of  Rank Year to Date Rank Last Week Rank      Title     Type  \\\n","2886  2021-01-14     7                 6              8  Cocomelon  TV Show   \n","2896  2021-01-15     7                 7             10  Cocomelon  TV Show   \n","2909  2021-01-16    10                 7              9  Cocomelon  TV Show   \n","2919  2021-01-17    10                10              9  Cocomelon  TV Show   \n","3019  2021-01-27    10                 -              -  Cocomelon  TV Show   \n","...          ...   ...               ...            ...        ...      ...   \n","6674  2022-01-28     5                 6              -  Cocomelon  TV Show   \n","6687  2022-01-29     8                 5              8  Cocomelon  TV Show   \n","6718  2022-02-01     9                 -              7  Cocomelon  TV Show   \n","6959  2022-02-25    10                 -              -  Cocomelon  TV Show   \n","6998  2022-03-01     9                 -              -  Cocomelon  TV Show   \n","\n","     Netflix Exclusive Netflix Release Date  Days In Top 10  Viewership Score  \n","2886               NaN          Jun 1, 2020             100               287  \n","2896               NaN          Jun 1, 2020             101               291  \n","2909               NaN          Jun 1, 2020             102               292  \n","2919               NaN          Jun 1, 2020             103               293  \n","3019               NaN          Jun 1, 2020             104               294  \n","...                ...                  ...             ...               ...  \n","6674               NaN          Jun 1, 2020             424              1466  \n","6687               NaN          Jun 1, 2020             425              1469  \n","6718               NaN          Jun 1, 2020             426              1471  \n","6959               NaN          Jun 1, 2020             427              1472  \n","6998               NaN          Jun 1, 2020             428              1474  \n","\n","[329 rows x 10 columns]"],"text/html":["\n","  <div id=\"df-6ba25cd4-b506-4a5d-90af-f30167ec41a4\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>As of</th>\n","      <th>Rank</th>\n","      <th>Year to Date Rank</th>\n","      <th>Last Week Rank</th>\n","      <th>Title</th>\n","      <th>Type</th>\n","      <th>Netflix Exclusive</th>\n","      <th>Netflix Release Date</th>\n","      <th>Days In Top 10</th>\n","      <th>Viewership Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2886</th>\n","      <td>2021-01-14</td>\n","      <td>7</td>\n","      <td>6</td>\n","      <td>8</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>100</td>\n","      <td>287</td>\n","    </tr>\n","    <tr>\n","      <th>2896</th>\n","      <td>2021-01-15</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>10</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>101</td>\n","      <td>291</td>\n","    </tr>\n","    <tr>\n","      <th>2909</th>\n","      <td>2021-01-16</td>\n","      <td>10</td>\n","      <td>7</td>\n","      <td>9</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>102</td>\n","      <td>292</td>\n","    </tr>\n","    <tr>\n","      <th>2919</th>\n","      <td>2021-01-17</td>\n","      <td>10</td>\n","      <td>10</td>\n","      <td>9</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>103</td>\n","      <td>293</td>\n","    </tr>\n","    <tr>\n","      <th>3019</th>\n","      <td>2021-01-27</td>\n","      <td>10</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>104</td>\n","      <td>294</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>6674</th>\n","      <td>2022-01-28</td>\n","      <td>5</td>\n","      <td>6</td>\n","      <td>-</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>424</td>\n","      <td>1466</td>\n","    </tr>\n","    <tr>\n","      <th>6687</th>\n","      <td>2022-01-29</td>\n","      <td>8</td>\n","      <td>5</td>\n","      <td>8</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>425</td>\n","      <td>1469</td>\n","    </tr>\n","    <tr>\n","      <th>6718</th>\n","      <td>2022-02-01</td>\n","      <td>9</td>\n","      <td>-</td>\n","      <td>7</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>426</td>\n","      <td>1471</td>\n","    </tr>\n","    <tr>\n","      <th>6959</th>\n","      <td>2022-02-25</td>\n","      <td>10</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>427</td>\n","      <td>1472</td>\n","    </tr>\n","    <tr>\n","      <th>6998</th>\n","      <td>2022-03-01</td>\n","      <td>9</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>428</td>\n","      <td>1474</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>329 rows × 10 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-6ba25cd4-b506-4a5d-90af-f30167ec41a4')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-6ba25cd4-b506-4a5d-90af-f30167ec41a4 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-6ba25cd4-b506-4a5d-90af-f30167ec41a4');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    <div id=\"df-e6fceed1-4ade-4f0f-b4eb-3c05200cd3e1\">\n","      <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6fceed1-4ade-4f0f-b4eb-3c05200cd3e1')\"\n","                title=\"Suggest charts\"\n","                style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","      </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","      <script>\n","        async function quickchart(key) {\n","          const quickchartButtonEl =\n","            document.querySelector('#' + key + ' button');\n","          quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","          quickchartButtonEl.classList.add('colab-df-spinner');\n","          try {\n","            const charts = await google.colab.kernel.invokeFunction(\n","                'suggestCharts', [key], {});\n","          } catch (error) {\n","            console.error('Error during call to suggestCharts:', error);\n","          }\n","          quickchartButtonEl.classList.remove('colab-df-spinner');\n","          quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","        }\n","        (() => {\n","          let quickchartButtonEl =\n","            document.querySelector('#df-e6fceed1-4ade-4f0f-b4eb-3c05200cd3e1 button');\n","          quickchartButtonEl.style.display =\n","            google.colab.kernel.accessAllowed ? 'block' : 'none';\n","        })();\n","      </script>\n","    </div>\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["base_excel = base[base['Days In Top 10'] >= 100]\n","base_excel.to_excel('Verificar.xlsx', index=False)"],"metadata":{"id":"1TtYyuCxL1Oh"},"execution_count":null,"outputs":[]},{"cell_type":"code","source":["base.Title.value_counts()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":490},"id":"Nx-ZgArCN1EW","executionInfo":{"status":"ok","timestamp":1752182609392,"user_tz":180,"elapsed":19,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"9f588a1b-7016-4bb7-fcfa-f1ec61043714"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Title\n","Cocomelon                       428\n","Ozark                            85\n","Cobra Kai                        81\n","Manifest                         80\n","The Queenâs Gambit             73\n","                               ... \n","The Lucky One                     1\n","Fistful of Vengeance              1\n","Dark Shadows                      1\n","Scary Stories to Tell in th…      1\n","Chosen                            1\n","Name: count, Length: 645, dtype: int64"],"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>count</th>\n","    </tr>\n","    <tr>\n","      <th>Title</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Cocomelon</th>\n","      <td>428</td>\n","    </tr>\n","    <tr>\n","      <th>Ozark</th>\n","      <td>85</td>\n","    </tr>\n","    <tr>\n","      <th>Cobra Kai</th>\n","      <td>81</td>\n","    </tr>\n","    <tr>\n","      <th>Manifest</th>\n","      <td>80</td>\n","    </tr>\n","    <tr>\n","      <th>The Queenâs Gambit</th>\n","      <td>73</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>The Lucky One</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Fistful of Vengeance</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Dark Shadows</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Scary Stories to Tell in th…</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Chosen</th>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>645 rows × 1 columns</p>\n","</div><br><label><b>dtype:</b> int64</label>"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["base.Type.value_counts().plot(kind='bar');"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":562},"id":"qvPau_F2N1Gh","executionInfo":{"status":"ok","timestamp":1752182755424,"user_tz":180,"elapsed":130,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"3070c329-3b6d-470f-ddec-83313a939a5b"},"execution_count":21,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["base['Viewership Score'].hist();"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":430},"id":"5BNgOl95N1Iy","executionInfo":{"status":"ok","timestamp":1752182802926,"user_tz":180,"elapsed":234,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"1bd51f34-288f-41b5-e1b6-44b5e4eb90de"},"execution_count":24,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["base[base['Viewership Score'] == base['Viewership Score'].max()]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":81},"id":"U7oEA1HgN1Ko","executionInfo":{"status":"ok","timestamp":1752182912841,"user_tz":180,"elapsed":23,"user":{"displayName":"Diogo Alves Casimiro ツ","userId":"03891108822150195120"}},"outputId":"5fb38cb2-ed7f-4223-ae82-d4b113068c32"},"execution_count":26,"outputs":[{"output_type":"execute_result","data":{"text/plain":["           As of  Rank Year to Date Rank Last Week Rank      Title     Type  \\\n","6998  2022-03-01     9                 -              -  Cocomelon  TV Show   \n","\n","     Netflix Exclusive Netflix Release Date  Days In Top 10  Viewership Score  \n","6998               NaN          Jun 1, 2020             428              1474  "],"text/html":["\n","  <div id=\"df-786ff48d-7c79-45f9-bbfd-2e4ee7dbc058\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>As of</th>\n","      <th>Rank</th>\n","      <th>Year to Date Rank</th>\n","      <th>Last Week Rank</th>\n","      <th>Title</th>\n","      <th>Type</th>\n","      <th>Netflix Exclusive</th>\n","      <th>Netflix Release Date</th>\n","      <th>Days In Top 10</th>\n","      <th>Viewership Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>6998</th>\n","      <td>2022-03-01</td>\n","      <td>9</td>\n","      <td>-</td>\n","      <td>-</td>\n","      <td>Cocomelon</td>\n","      <td>TV Show</td>\n","      <td>NaN</td>\n","      <td>Jun 1, 2020</td>\n","      <td>428</td>\n","      <td>1474</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-786ff48d-7c79-45f9-bbfd-2e4ee7dbc058')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-786ff48d-7c79-45f9-bbfd-2e4ee7dbc058 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-786ff48d-7c79-45f9-bbfd-2e4ee7dbc058');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","    </div>\n","  </div>\n"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"dataframe","repr_error":"0"}},"metadata":{},"execution_count":26}]}]}